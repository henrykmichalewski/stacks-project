	stacks-project -- algebraic stacks project


Collaborative web-based project writing a text book on algebraic stacks and the
algebraic geometry that is needed to define them. Location on the web:

	https://stacks.math.columbia.edu/

You can simply latex the files in the current directory read them, edit them,
and submit your changes by email back into the project.


Here is are some pointers to documentation:
  * how to create all dvi/pdf files at once, see documentation/make-project
  * how to submit your work, see documentation/submitting-patches
  * how to use git, see documentation/git-howto
  * read about support from organizations in documentation/support
  * for a rough todo list, see documentation/todo-list
  * for technical rules governing internal references, see documentation/rules
For more information, please see the website at the address above.


To get in touch with the maintainer(s) of this project please email

	stacks.project@gmail.com

## Dependency Graph

A Python script in `scripts/dependency_graph.py` can generate a graph of references between labelled environments. It writes a Graphviz DOT file and optional JSON description. With `--tex` it outputs a TeX document containing a theorem and all dependencies.

Examples:

```bash
python3 scripts/dependency_graph.py . --dot deps.dot --json
python3 scripts/dependency_graph.py . --tex lemma-equality-genus-reduction-bigger-than --tex-out deps.tex
python3 scripts/dependency_graph.py . --dot lemma_genus.dot --single lemma-equality-genus-reduction-bigger-than
```

The last command creates a DOT file only for `lemma-equality-genus-reduction-bigger-than` and all lemmas it
depends on.  You can visualize any DOT file with Graphviz:

```bash
dot -Tpdf lemma_genus.dot -o lemma_genus.pdf
```

Running the second command produces a TeX document with the referenced
definitions and lemmas followed by the lemma itself.  For example the
current output for `lemma-equality-genus-reduction-bigger-than` is

```tex
\documentclass{article}
\begin{document}
\begin{lemma}
\label{lemma-divisor-special-fiber}
Let \$X\$ be a regular model of a smooth curve \$C\$ over \$K\$.
\begin{enumerate}
\item the special fibre \$X_k\$ is an effective Cartier divisor on \$X\$,
\item each irreducible component \$C_i\$ of \$X_k\$ is an effective
Cartier divisor on \$X\$,
\item \$X_k = \sum m_i C_i\$ (sum of effective Cartier divisors)
where \$m_i\$ is the multiplicity of \$C_i\$ in \$X_k\$,
\item \$\mathcal{O}_X(X_k) \cong \mathcal{O}_X\$.
\end{enumerate}
\end{lemma}
\begin{situation}
\label{situation-regular-model}
Let \$R\$ be a discrete valuation ring with fraction field \$K\$,
residue field \$k\$, and uniformizer \$\pi\$.
Let \$C\$ be a smooth projective curve over \$K\$ with \$H^0(C, \mathcal{O}_C) = K\$.
Let \$X\$ be a regular proper model of \$C\$.
Let \$C_1, \ldots, C_n\$ be the irreducible components of the special
fibre \$X_k\$. Write \$X_k = \sum m_i C_i\$ as in
Lemma \ref{lemma-divisor-special-fiber}.
\end{situation}
\begin{lemma}
\label{lemma-top-genus}
Let \$n, m_i, a_{ij}, w_i, g_i\$ be a numerical type.
Let \$e\$ be the number of pairs \$(i, j)\$ with \$i < j\$ and \$a_{ij} > 0\$.
Then the expression \$g_{top} = 1 - n + e\$ is \$\geq 0\$.
\end{lemma}
\begin{definition}
\label{definition-top-genus}
Let \$n, m_i, a_{ij}, w_i, g_i\$ be a numerical type \$T\$. The
{\it topological genus of \$T\$} is the nonnegative integer
\$g_{top} = 1 - n + e\$ from Lemma \ref{lemma-top-genus}.
\end{definition}
\begin{lemma}
\label{lemma-numerical-type-of-model}
In Situation \ref{situation-regular-model} with
\$\kappa_i = H^0(C_i, \mathcal{O}_{C_i})\$ and \$g_i\$ the genus of \$C_i\$
the data
\$\$
n, m_i, (C_i \cdot C_j), [\kappa_i : k], g_i
\$\$
is a numerical type of genus equal to the genus of \$C\$.
\end{lemma}
\begin{definition}
\label{definition-numerical-type-model}
In Situation \ref{situation-regular-model} the
{\it numerical type associated to \$X\$} is the numerical
type described in Lemma \ref{lemma-numerical-type-of-model}.
\end{definition}
\begin{lemma}
\label{lemma-genus-reduction-bigger-than}
In Situation \ref{situation-regular-model} assume \$X_k\$ has a \$k\$-rational
point \$x\$ which is a smooth point of \$X_k \to \Spec(k)\$. Then
\$\$
\dim_k H^1((X_k)_{red}, \mathcal{O}_{(X_k)_{red}}) \geq
g_{top} + g_{geom}(X_k/k)
\$\$
where \$g_{geom}\$ is as in
Algebraic Curves, Section \ref{curves-section-genus-geometric-genus}
and \$g_{top}\$ is the topological genus
(Definition \ref{definition-top-genus})
of the numerical type associated to \$X_k\$
(Definition \ref{definition-numerical-type-model}).
\end{lemma}
\begin{lemma}
\label{lemma-equality-genus-reduction-bigger-than}
If equality holds in Lemma \ref{lemma-genus-reduction-bigger-than}
then
\begin{enumerate}
\item the unique irreducible component of \$X_k\$ containing
\$x\$ is a smooth projective geometrically irreducible curve
over \$k\$,
\item if \$C \subset X_k\$ is another irreducible component, then
\$\kappa = H^0(C, \mathcal{O}_C)\$ is a finite separable extension
of \$k\$, \$C\$ has a \$\kappa\$-rational point, and \$C\$ is smooth over \$\kappa\$
\end{enumerate}
\end{lemma}
\end{document}
```

To generate dependency documents for a batch of theorems you can run a
short Python script. The following example chooses ten theorem labels at
random and writes a TeX file for each:

```bash
python3 - <<'EOF'
from scripts.dependency_graph import build_graph, generate_dependency_tex
import random
results, edges = build_graph('.')
theorems = [l for l, d in results.items() if d['type'] == 'theorem']
for lbl in random.sample(theorems, 10):
    generate_dependency_tex(lbl, results, edges, '.', f'{lbl}.tex')
EOF
```

Producing dependency files for every theorem in the project simply
iterates over the list without sampling:

```bash
python3 - <<'EOF'
from scripts.dependency_graph import build_graph, generate_dependency_tex
results, edges = build_graph('.')
for lbl, info in results.items():
    if info['type'] == 'theorem':
        generate_dependency_tex(lbl, results, edges, '.', f'{lbl}.tex')
EOF
```
